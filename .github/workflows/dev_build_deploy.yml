# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: DEV_CI/CD

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:

    - name: Check out the repository to the runner
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'corretto'
        java-version: '17'

    - name: Build with Gradle
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: build

    - name: Docker build & push to docker repo
      run: |
        docker login -u ${{ secrets.DEV_DOCKER_USERNAME }} -p ${{ secrets.DEV_DOCKER_PASSWORD }}
        docker build -f Dockerfile -t ${{ secrets.DEV_DOCKER_REPO }} .
        docker push ${{ secrets.DEV_DOCKER_REPO }}

  deploy:
    runs-on: ubuntu-latest
    steps:

    - name: Inject environment variable
      uses: appleboy/ssh-action@master
      id: env
      with:
        host: ${{ secrets.DEV_SSH_HOST }}
        username: ubuntu
        key: ${{ secrets.DEV_SSH_PRIVATE_KEY }}
        port: ${{ secrets.DEV_SSH_PORT }}
        envs: GITHUB_SHA
        script: |
          rm -f .env
          touch .env
          echo "DB_URL=${{ secrets.DEV_DB_URL }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env

    - name: Deploy
      uses: appleboy/ssh-action@master
      id: deploy
      with:
        host: ${{ secrets.DEV_SSH_HOST }}
        username: ubuntu
        key: ${{ secrets.DEV_SSH_PRIVATE_KEY }}
        port: ${{ secrets.DEV_SSH_PORT }}
        envs: GITHUB_SHA
        script: |
          sudo docker pull ${{ secrets.DEV_DOCKER_REPO }}
          sudo docker rm -f $(docker ps -qa)
          docker compose up -d
          docker image prune -f
